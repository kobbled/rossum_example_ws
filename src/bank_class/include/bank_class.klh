%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

-- declare_member functions
-- ***************
  -- public
declare_member(class_name,constructor,class_name,cntr)
ROUTINE constructor (number : INTEGER; ldgr, ldgr_prog : STRING) FROM class_name
declare_member(class_name,destructor,class_name,dsct)
ROUTINE destructor FROM class_name
--getters
declare_member(class_name,get_account_number,class_name,gnum)
ROUTINE get_account_number : INTEGER FROM class_name
declare_member(class_name,get_account_name,class_name,gnam)
ROUTINE get_account_name : STRING FROM class_name
declare_member(class_name,get_account_funds,class_name,gfnd)
ROUTINE get_account_funds : REAL FROM class_name
--setters
declare_member(class_name,set_account_number,class_name,snum)
ROUTINE set_account_number (number : INTEGER) FROM class_name
declare_member(class_name,set_account_name,class_name,snam)
ROUTINE set_account_name (name : STRING) FROM class_name
declare_member(class_name,set_account_funds,class_name,sfnd)
ROUTINE set_account_funds (funds : REAL) FROM class_name

declare_member(class_name,print_account,class_name,pact)
ROUTINE print_account FROM class_name
declare_member(class_name,transfer,class_name,trfr)
ROUTINE transfer (amount : REAL; recipient : INTEGER) FROM class_name
declare_member(class_name,deposit,class_name,dpst)
ROUTINE deposit (amount : REAL) FROM class_name

%endif --end header